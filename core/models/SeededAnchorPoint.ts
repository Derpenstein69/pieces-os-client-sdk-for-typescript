/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AnchorTypeEnum } from './AnchorTypeEnum';
import {
    AnchorTypeEnumFromJSON,
    AnchorTypeEnumFromJSONTyped,
    AnchorTypeEnumToJSON,
} from './AnchorTypeEnum';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { PlatformEnum } from './PlatformEnum';
import {
    PlatformEnumFromJSON,
    PlatformEnumFromJSONTyped,
    PlatformEnumToJSON,
} from './PlatformEnum';

/**
 *
 * @export
 * @interface SeededAnchorPoint
 */
export interface SeededAnchorPoint {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof SeededAnchorPoint
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {AnchorTypeEnum}
     * @memberof SeededAnchorPoint
     */
    type: AnchorTypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof SeededAnchorPoint
     */
    watch?: boolean;
    /**
     *
     * @type {string}
     * @memberof SeededAnchorPoint
     */
    fullpath: string;
    /**
     * Cannot create an AnchorPoint w/o a Anchor.
     * @type {string}
     * @memberof SeededAnchorPoint
     */
    anchor: string;
    /**
     *
     * @type {PlatformEnum}
     * @memberof SeededAnchorPoint
     */
    platform?: PlatformEnum;
}

/**
 * Check if a given object implements the SeededAnchorPoint interface.
 */
export function instanceOfSeededAnchorPoint(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "fullpath" in value;
    isInstance = isInstance && "anchor" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:27 AM
 *
 * @export
 * @param {*} json
 * @returns {SeededAnchorPoint}
 */
export function SeededAnchorPointFromJSON(json: any): SeededAnchorPoint {
    return SeededAnchorPointFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:27 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {SeededAnchorPoint}
 */
export function SeededAnchorPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededAnchorPoint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'type': AnchorTypeEnumFromJSON(json['type']),
        'watch': !exists(json, 'watch') ? undefined : json['watch'],
        'fullpath': json['fullpath'],
        'anchor': json['anchor'],
        'platform': !exists(json, 'platform') ? undefined : PlatformEnumFromJSON(json['platform']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:27 AM
 *
 * @export
 * @param {?(SeededAnchorPoint | null)} [value]
 * @returns {*}
 */
export function SeededAnchorPointToJSON(value?: SeededAnchorPoint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'type': AnchorTypeEnumToJSON(value.type),
        'watch': value.watch,
        'fullpath': value.fullpath,
        'anchor': value.anchor,
        'platform': PlatformEnumToJSON(value.platform),
    };
}

