/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { ReferencedFormat } from './ReferencedFormat';
import {
    ReferencedFormatFromJSON,
    ReferencedFormatFromJSONTyped,
    ReferencedFormatToJSON,
} from './ReferencedFormat';
import type { TrackedFormatEventIdentifierDescriptionPairs } from './TrackedFormatEventIdentifierDescriptionPairs';
import {
    TrackedFormatEventIdentifierDescriptionPairsFromJSON,
    TrackedFormatEventIdentifierDescriptionPairsFromJSONTyped,
    TrackedFormatEventIdentifierDescriptionPairsToJSON,
} from './TrackedFormatEventIdentifierDescriptionPairs';
import type { TrackedFormatEventMetadata } from './TrackedFormatEventMetadata';
import {
    TrackedFormatEventMetadataFromJSON,
    TrackedFormatEventMetadataFromJSONTyped,
    TrackedFormatEventMetadataToJSON,
} from './TrackedFormatEventMetadata';

/**
 * Again this is a model designed to be sent over to a context server to be built and then sent along to segment.
 * 
 * @export
 * @interface SeededTrackedFormatEvent
 */
export interface SeededTrackedFormatEvent {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof SeededTrackedFormatEvent
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {TrackedFormatEventIdentifierDescriptionPairs}
     * @memberof SeededTrackedFormatEvent
     */
    identifierDescriptionPair: TrackedFormatEventIdentifierDescriptionPairs;
    /**
     * 
     * @type {ReferencedFormat}
     * @memberof SeededTrackedFormatEvent
     */
    format: ReferencedFormat;
    /**
     * 
     * @type {TrackedFormatEventMetadata}
     * @memberof SeededTrackedFormatEvent
     */
    metadata?: TrackedFormatEventMetadata;
}

/**
 * Check if a given object implements the SeededTrackedFormatEvent interface.
 */
export function instanceOfSeededTrackedFormatEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "identifierDescriptionPair" in value;
    isInstance = isInstance && "format" in value;

    return isInstance;
}

export function SeededTrackedFormatEventFromJSON(json: any): SeededTrackedFormatEvent {
    return SeededTrackedFormatEventFromJSONTyped(json, false);
}

export function SeededTrackedFormatEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededTrackedFormatEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'identifierDescriptionPair': TrackedFormatEventIdentifierDescriptionPairsFromJSON(json['identifier_description_pair']),
        'format': ReferencedFormatFromJSON(json['format']),
        'metadata': !exists(json, 'metadata') ? undefined : TrackedFormatEventMetadataFromJSON(json['metadata']),
    };
}

export function SeededTrackedFormatEventToJSON(value?: SeededTrackedFormatEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'identifier_description_pair': TrackedFormatEventIdentifierDescriptionPairsToJSON(value.identifierDescriptionPair),
        'format': ReferencedFormatToJSON(value.format),
        'metadata': TrackedFormatEventMetadataToJSON(value.metadata),
    };
}

