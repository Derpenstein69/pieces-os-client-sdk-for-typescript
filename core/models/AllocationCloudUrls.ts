/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AllocationCloudUrl } from './AllocationCloudUrl';
import {
    AllocationCloudUrlFromJSON,
    AllocationCloudUrlFromJSONTyped,
    AllocationCloudUrlToJSON,
} from './AllocationCloudUrl';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';

/**
 * you will have at minimum 2 urls,
 *
 * base: is the default url of your cloud.
 *
 * id: is the branded url, uuid.pieces.cloud.
 *
 * (optional) vanity: is the custom branded url, mark.pieces.cloud
 * @export
 * @interface AllocationCloudUrls
 */
export interface AllocationCloudUrls {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof AllocationCloudUrls
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {AllocationCloudUrl}
     * @memberof AllocationCloudUrls
     */
    base: AllocationCloudUrl;
    /**
     *
     * @type {AllocationCloudUrl}
     * @memberof AllocationCloudUrls
     */
    id: AllocationCloudUrl;
    /**
     *
     * @type {AllocationCloudUrl}
     * @memberof AllocationCloudUrls
     */
    vanity?: AllocationCloudUrl;
}

/**
 * Check if a given object implements the AllocationCloudUrls interface.
 */
export function instanceOfAllocationCloudUrls(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "base" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:14 AM
 *
 * @export
 * @param {*} json
 * @returns {AllocationCloudUrls}
 */
export function AllocationCloudUrlsFromJSON(json: any): AllocationCloudUrls {
    return AllocationCloudUrlsFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:14 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {AllocationCloudUrls}
 */
export function AllocationCloudUrlsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllocationCloudUrls {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'base': AllocationCloudUrlFromJSON(json['base']),
        'id': AllocationCloudUrlFromJSON(json['id']),
        'vanity': !exists(json, 'vanity') ? undefined : AllocationCloudUrlFromJSON(json['vanity']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:14 AM
 *
 * @export
 * @param {?(AllocationCloudUrls | null)} [value]
 * @returns {*}
 */
export function AllocationCloudUrlsToJSON(value?: AllocationCloudUrls | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'base': AllocationCloudUrlToJSON(value.base),
        'id': AllocationCloudUrlToJSON(value.id),
        'vanity': AllocationCloudUrlToJSON(value.vanity),
    };
}

