/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Backup } from './Backup';
import {
    BackupFromJSON,
    BackupFromJSONTyped,
    BackupToJSON,
} from './Backup';
import type { BackupStatusEnum } from './BackupStatusEnum';
import {
    BackupStatusEnumFromJSON,
    BackupStatusEnumFromJSONTyped,
    BackupStatusEnumToJSON,
} from './BackupStatusEnum';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';

/**
 * TODO add more description to this.
 *
 * can eventually add a number that display the percent downloaded an so on.(this is called percent 0-100)
 * @export
 * @interface BackupStatus
 */
export interface BackupStatus {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof BackupStatus
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {BackupStatusEnum}
     * @memberof BackupStatus
     */
    value?: BackupStatusEnum;
    /**
     * Optionally if the download is in progress you will receive a download percent(from 0-100).
     * @type {number}
     * @memberof BackupStatus
     */
    percentage?: number | null;
    /**
     *
     * @type {Backup}
     * @memberof BackupStatus
     */
    backup: Backup;
}

/**
 * Check if a given object implements the BackupStatus interface.
 */
export function instanceOfBackupStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "backup" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:12 AM
 *
 * @export
 * @param {*} json
 * @returns {BackupStatus}
 */
export function BackupStatusFromJSON(json: any): BackupStatus {
    return BackupStatusFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:12 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {BackupStatus}
 */
export function BackupStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackupStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'value': !exists(json, 'value') ? undefined : BackupStatusEnumFromJSON(json['value']),
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
        'backup': BackupFromJSON(json['backup']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:12 AM
 *
 * @export
 * @param {?(BackupStatus | null)} [value]
 * @returns {*}
 */
export function BackupStatusToJSON(value?: BackupStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'value': BackupStatusEnumToJSON(value.value),
        'percentage': value.percentage,
        'backup': BackupToJSON(value.backup),
    };
}

