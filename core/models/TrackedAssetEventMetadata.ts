/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReferencedAnchor } from './ReferencedAnchor';
import {
    ReferencedAnchorFromJSON,
    ReferencedAnchorFromJSONTyped,
    ReferencedAnchorToJSON,
} from './ReferencedAnchor';
import type { ReferencedAnnotation } from './ReferencedAnnotation';
import {
    ReferencedAnnotationFromJSON,
    ReferencedAnnotationFromJSONTyped,
    ReferencedAnnotationToJSON,
} from './ReferencedAnnotation';
import type { ReferencedHint } from './ReferencedHint';
import {
    ReferencedHintFromJSON,
    ReferencedHintFromJSONTyped,
    ReferencedHintToJSON,
} from './ReferencedHint';
import type { ReferencedPerson } from './ReferencedPerson';
import {
    ReferencedPersonFromJSON,
    ReferencedPersonFromJSONTyped,
    ReferencedPersonToJSON,
} from './ReferencedPerson';
import type { ReferencedSensitive } from './ReferencedSensitive';
import {
    ReferencedSensitiveFromJSON,
    ReferencedSensitiveFromJSONTyped,
    ReferencedSensitiveToJSON,
} from './ReferencedSensitive';
import type { ReferencedShare } from './ReferencedShare';
import {
    ReferencedShareFromJSON,
    ReferencedShareFromJSONTyped,
    ReferencedShareToJSON,
} from './ReferencedShare';
import type { ReferencedTag } from './ReferencedTag';
import {
    ReferencedTagFromJSON,
    ReferencedTagFromJSONTyped,
    ReferencedTagToJSON,
} from './ReferencedTag';
import type { ReferencedWebsite } from './ReferencedWebsite';
import {
    ReferencedWebsiteFromJSON,
    ReferencedWebsiteFromJSONTyped,
    ReferencedWebsiteToJSON,
} from './ReferencedWebsite';
import type { TrackedAssetEventCreationMetadata } from './TrackedAssetEventCreationMetadata';
import {
    TrackedAssetEventCreationMetadataFromJSON,
    TrackedAssetEventCreationMetadataFromJSONTyped,
    TrackedAssetEventCreationMetadataToJSON,
} from './TrackedAssetEventCreationMetadata';
import type { TrackedAssetEventFormatReclassificationMetadata } from './TrackedAssetEventFormatReclassificationMetadata';
import {
    TrackedAssetEventFormatReclassificationMetadataFromJSON,
    TrackedAssetEventFormatReclassificationMetadataFromJSONTyped,
    TrackedAssetEventFormatReclassificationMetadataToJSON,
} from './TrackedAssetEventFormatReclassificationMetadata';
import type { TrackedAssetEventRenameMetadata } from './TrackedAssetEventRenameMetadata';
import {
    TrackedAssetEventRenameMetadataFromJSON,
    TrackedAssetEventRenameMetadataFromJSONTyped,
    TrackedAssetEventRenameMetadataToJSON,
} from './TrackedAssetEventRenameMetadata';
import type { TrackedAssetsEventSearchMetadata } from './TrackedAssetsEventSearchMetadata';
import {
    TrackedAssetsEventSearchMetadataFromJSON,
    TrackedAssetsEventSearchMetadataFromJSONTyped,
    TrackedAssetsEventSearchMetadataToJSON,
} from './TrackedAssetsEventSearchMetadata';

/**
 * 
 * @export
 * @interface TrackedAssetEventMetadata
 */
export interface TrackedAssetEventMetadata {
    /**
     * 
     * @type {TrackedAssetEventFormatReclassificationMetadata}
     * @memberof TrackedAssetEventMetadata
     */
    reclassification?: TrackedAssetEventFormatReclassificationMetadata;
    /**
     * 
     * @type {TrackedAssetEventCreationMetadata}
     * @memberof TrackedAssetEventMetadata
     */
    creation?: TrackedAssetEventCreationMetadata;
    /**
     * 
     * @type {TrackedAssetEventRenameMetadata}
     * @memberof TrackedAssetEventMetadata
     */
    rename?: TrackedAssetEventRenameMetadata;
    /**
     * 
     * @type {ReferencedTag}
     * @memberof TrackedAssetEventMetadata
     */
    tag?: ReferencedTag;
    /**
     * 
     * @type {ReferencedWebsite}
     * @memberof TrackedAssetEventMetadata
     */
    website?: ReferencedWebsite;
    /**
     * 
     * @type {ReferencedPerson}
     * @memberof TrackedAssetEventMetadata
     */
    person?: ReferencedPerson;
    /**
     * 
     * @type {ReferencedSensitive}
     * @memberof TrackedAssetEventMetadata
     */
    sensitive?: ReferencedSensitive;
    /**
     * 
     * @type {ReferencedShare}
     * @memberof TrackedAssetEventMetadata
     */
    share?: ReferencedShare;
    /**
     * 
     * @type {TrackedAssetsEventSearchMetadata}
     * @memberof TrackedAssetEventMetadata
     */
    search?: TrackedAssetsEventSearchMetadata;
    /**
     * 
     * @type {ReferencedAnnotation}
     * @memberof TrackedAssetEventMetadata
     */
    annotation?: ReferencedAnnotation;
    /**
     * 
     * @type {ReferencedHint}
     * @memberof TrackedAssetEventMetadata
     */
    hint?: ReferencedHint;
    /**
     * 
     * @type {ReferencedAnchor}
     * @memberof TrackedAssetEventMetadata
     */
    anchor?: ReferencedAnchor;
}

/**
 * Check if a given object implements the TrackedAssetEventMetadata interface.
 */
export function instanceOfTrackedAssetEventMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackedAssetEventMetadataFromJSON(json: any): TrackedAssetEventMetadata {
    return TrackedAssetEventMetadataFromJSONTyped(json, false);
}

export function TrackedAssetEventMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackedAssetEventMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reclassification': !exists(json, 'reclassification') ? undefined : TrackedAssetEventFormatReclassificationMetadataFromJSON(json['reclassification']),
        'creation': !exists(json, 'creation') ? undefined : TrackedAssetEventCreationMetadataFromJSON(json['creation']),
        'rename': !exists(json, 'rename') ? undefined : TrackedAssetEventRenameMetadataFromJSON(json['rename']),
        'tag': !exists(json, 'tag') ? undefined : ReferencedTagFromJSON(json['tag']),
        'website': !exists(json, 'website') ? undefined : ReferencedWebsiteFromJSON(json['website']),
        'person': !exists(json, 'person') ? undefined : ReferencedPersonFromJSON(json['person']),
        'sensitive': !exists(json, 'sensitive') ? undefined : ReferencedSensitiveFromJSON(json['sensitive']),
        'share': !exists(json, 'share') ? undefined : ReferencedShareFromJSON(json['share']),
        'search': !exists(json, 'search') ? undefined : TrackedAssetsEventSearchMetadataFromJSON(json['search']),
        'annotation': !exists(json, 'annotation') ? undefined : ReferencedAnnotationFromJSON(json['annotation']),
        'hint': !exists(json, 'hint') ? undefined : ReferencedHintFromJSON(json['hint']),
        'anchor': !exists(json, 'anchor') ? undefined : ReferencedAnchorFromJSON(json['anchor']),
    };
}

export function TrackedAssetEventMetadataToJSON(value?: TrackedAssetEventMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reclassification': TrackedAssetEventFormatReclassificationMetadataToJSON(value.reclassification),
        'creation': TrackedAssetEventCreationMetadataToJSON(value.creation),
        'rename': TrackedAssetEventRenameMetadataToJSON(value.rename),
        'tag': ReferencedTagToJSON(value.tag),
        'website': ReferencedWebsiteToJSON(value.website),
        'person': ReferencedPersonToJSON(value.person),
        'sensitive': ReferencedSensitiveToJSON(value.sensitive),
        'share': ReferencedShareToJSON(value.share),
        'search': TrackedAssetsEventSearchMetadataToJSON(value.search),
        'annotation': ReferencedAnnotationToJSON(value.annotation),
        'hint': ReferencedHintToJSON(value.hint),
        'anchor': ReferencedAnchorToJSON(value.anchor),
    };
}

