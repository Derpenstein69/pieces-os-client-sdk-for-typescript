/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { ModelDownloadProgressStatusEnum } from './ModelDownloadProgressStatusEnum';
import {
    ModelDownloadProgressStatusEnumFromJSON,
    ModelDownloadProgressStatusEnumFromJSONTyped,
    ModelDownloadProgressStatusEnumToJSON,
} from './ModelDownloadProgressStatusEnum';

/**
 * This is the model that is sent over our ws for streaming the progress of a model that is being downloaded.
 *
 * can eventually add a number that display the percent downloaded an so on.(this is called percent 0-100)
 * @export
 * @interface ModelDownloadProgress
 */
export interface ModelDownloadProgress {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof ModelDownloadProgress
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {ModelDownloadProgressStatusEnum}
     * @memberof ModelDownloadProgress
     */
    status?: ModelDownloadProgressStatusEnum;
    /**
     * Optionally if the download is in progress you will recieve a download percent(from 0-100).
     * @type {number}
     * @memberof ModelDownloadProgress
     */
    percentage?: number | null;
}

/**
 * Check if a given object implements the ModelDownloadProgress interface.
 */
export function instanceOfModelDownloadProgress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:34 AM
 *
 * @export
 * @param {*} json
 * @returns {ModelDownloadProgress}
 */
export function ModelDownloadProgressFromJSON(json: any): ModelDownloadProgress {
    return ModelDownloadProgressFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:34 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {ModelDownloadProgress}
 */
export function ModelDownloadProgressFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelDownloadProgress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'status': !exists(json, 'status') ? undefined : ModelDownloadProgressStatusEnumFromJSON(json['status']),
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:34 AM
 *
 * @export
 * @param {?(ModelDownloadProgress | null)} [value]
 * @returns {*}
 */
export function ModelDownloadProgressToJSON(value?: ModelDownloadProgress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'status': ModelDownloadProgressStatusEnumToJSON(value.status),
        'percentage': value.percentage,
    };
}

