/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SeededAssetTag } from './SeededAssetTag';
import {
    SeededAssetTagFromJSON,
    SeededAssetTagFromJSONTyped,
    SeededAssetTagToJSON,
} from './SeededAssetTag';

/**
 *
 * @export
 * @interface SeededAssetTags
 */
export interface SeededAssetTags {
    /**
     *
     * @type {Array<SeededAssetTag>}
     * @memberof SeededAssetTags
     */
    iterable: Array<SeededAssetTag>;
}

/**
 * Check if a given object implements the SeededAssetTags interface.
 */
export function instanceOfSeededAssetTags(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "iterable" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:27 AM
 *
 * @export
 * @param {*} json
 * @returns {SeededAssetTags}
 */
export function SeededAssetTagsFromJSON(json: any): SeededAssetTags {
    return SeededAssetTagsFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:27 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {SeededAssetTags}
 */
export function SeededAssetTagsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededAssetTags {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'iterable': ((json['iterable'] as Array<any>).map(SeededAssetTagFromJSON)),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:27 AM
 *
 * @export
 * @param {?(SeededAssetTags | null)} [value]
 * @returns {*}
 */
export function SeededAssetTagsToJSON(value?: SeededAssetTags | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'iterable': ((value.iterable as Array<any>).map(SeededAssetTagToJSON)),
    };
}

