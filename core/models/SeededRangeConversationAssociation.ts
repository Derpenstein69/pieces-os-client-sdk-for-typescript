/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { ReferencedConversation } from './ReferencedConversation';
import {
    ReferencedConversationFromJSON,
    ReferencedConversationFromJSONTyped,
    ReferencedConversationToJSON,
} from './ReferencedConversation';
import type { SeededRangeConversationGroundingAssociation } from './SeededRangeConversationGroundingAssociation';
import {
    SeededRangeConversationGroundingAssociationFromJSON,
    SeededRangeConversationGroundingAssociationFromJSONTyped,
    SeededRangeConversationGroundingAssociationToJSON,
} from './SeededRangeConversationGroundingAssociation';

/**
 *
 * @export
 * @interface SeededRangeConversationAssociation
 */
export interface SeededRangeConversationAssociation {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof SeededRangeConversationAssociation
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {ReferencedConversation}
     * @memberof SeededRangeConversationAssociation
     */
    reference: ReferencedConversation;
    /**
     *
     * @type {SeededRangeConversationGroundingAssociation}
     * @memberof SeededRangeConversationAssociation
     */
    grounding?: SeededRangeConversationGroundingAssociation;
}

/**
 * Check if a given object implements the SeededRangeConversationAssociation interface.
 */
export function instanceOfSeededRangeConversationAssociation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "reference" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:25 AM
 *
 * @export
 * @param {*} json
 * @returns {SeededRangeConversationAssociation}
 */
export function SeededRangeConversationAssociationFromJSON(json: any): SeededRangeConversationAssociation {
    return SeededRangeConversationAssociationFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:25 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {SeededRangeConversationAssociation}
 */
export function SeededRangeConversationAssociationFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededRangeConversationAssociation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'reference': ReferencedConversationFromJSON(json['reference']),
        'grounding': !exists(json, 'grounding') ? undefined : SeededRangeConversationGroundingAssociationFromJSON(json['grounding']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:25 AM
 *
 * @export
 * @param {?(SeededRangeConversationAssociation | null)} [value]
 * @returns {*}
 */
export function SeededRangeConversationAssociationToJSON(value?: SeededRangeConversationAssociation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'reference': ReferencedConversationToJSON(value.reference),
        'grounding': SeededRangeConversationGroundingAssociationToJSON(value.grounding),
    };
}

