/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { SeededAsset } from './SeededAsset';
import {
    SeededAssetFromJSON,
    SeededAssetFromJSONTyped,
    SeededAssetToJSON,
} from './SeededAsset';

/**
 * A seed Model used to wrap a format or asset
 * @export
 * @interface Seed
 */
export interface Seed {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof Seed
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {SeededAsset}
     * @memberof Seed
     */
    asset?: SeededAsset;
    /**
     * 
     * @type {string}
     * @memberof Seed
     */
    type: SeedTypeEnum;
}


/**
 * @export
 */
export const SeedTypeEnum = {
    Format: 'SEEDED_FORMAT',
    Asset: 'SEEDED_ASSET'
} as const;
export type SeedTypeEnum = typeof SeedTypeEnum[keyof typeof SeedTypeEnum];


/**
 * Check if a given object implements the Seed interface.
 */
export function instanceOfSeed(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function SeedFromJSON(json: any): Seed {
    return SeedFromJSONTyped(json, false);
}

export function SeedFromJSONTyped(json: any, ignoreDiscriminator: boolean): Seed {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'asset': !exists(json, 'asset') ? undefined : SeededAssetFromJSON(json['asset']),
        'type': json['type'],
    };
}

export function SeedToJSON(value?: Seed | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'asset': SeededAssetToJSON(value.asset),
        'type': value.type,
    };
}

