/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FileFormat } from './FileFormat';
import {
    FileFormatFromJSON,
    FileFormatFromJSONTyped,
    FileFormatToJSON,
} from './FileFormat';
import type { GroupedTimestamp } from './GroupedTimestamp';
import {
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
} from './GroupedTimestamp';

/**
 * This is a model for a minimum exported version of an asset.
 * @export
 * @interface ExportedAsset
 */
export interface ExportedAsset {
    /**
     * this is the title of the asset
     *
     * @type {string}
     * @memberof ExportedAsset
     */
    name: string;
    /**
     * this is the description of the asset
     * @type {string}
     * @memberof ExportedAsset
     */
    description: string;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof ExportedAsset
     */
    created: GroupedTimestamp;
    /**
     *
     * @type {FileFormat}
     * @memberof ExportedAsset
     */
    raw: FileFormat;
}

/**
 * Check if a given object implements the ExportedAsset interface.
 */
export function instanceOfExportedAsset(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "created" in value;
    isInstance = isInstance && "raw" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:15 AM
 *
 * @export
 * @param {*} json
 * @returns {ExportedAsset}
 */
export function ExportedAssetFromJSON(json: any): ExportedAsset {
    return ExportedAssetFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:15 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {ExportedAsset}
 */
export function ExportedAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportedAsset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'name': json['name'],
        'description': json['description'],
        'created': GroupedTimestampFromJSON(json['created']),
        'raw': FileFormatFromJSON(json['raw']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:15 AM
 *
 * @export
 * @param {?(ExportedAsset | null)} [value]
 * @returns {*}
 */
export function ExportedAssetToJSON(value?: ExportedAsset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'name': value.name,
        'description': value.description,
        'created': GroupedTimestampToJSON(value.created),
        'raw': FileFormatToJSON(value.raw),
    };
}

