/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Backup } from './Backup';
import {
    BackupFromJSON,
    BackupFromJSONTyped,
    BackupToJSON,
} from './Backup';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { ModelDownloadProgressStatusEnum } from './ModelDownloadProgressStatusEnum';
import {
    ModelDownloadProgressStatusEnumFromJSON,
    ModelDownloadProgressStatusEnumFromJSONTyped,
    ModelDownloadProgressStatusEnumToJSON,
} from './ModelDownloadProgressStatusEnum';

/**
 * This is a specific model to the /backups/create/streamed.
 * @export
 * @interface BackupStreamedProgress
 */
export interface BackupStreamedProgress {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof BackupStreamedProgress
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {ModelDownloadProgressStatusEnum}
     * @memberof BackupStreamedProgress
     */
    status?: ModelDownloadProgressStatusEnum;
    /**
     * Optionally if the download is in progress you will recieve a download percent(from 0-100).
     * @type {number}
     * @memberof BackupStreamedProgress
     */
    percentage?: number | null;
    /**
     * 
     * @type {Backup}
     * @memberof BackupStreamedProgress
     */
    backup?: Backup;
}

/**
 * Check if a given object implements the BackupStreamedProgress interface.
 */
export function instanceOfBackupStreamedProgress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BackupStreamedProgressFromJSON(json: any): BackupStreamedProgress {
    return BackupStreamedProgressFromJSONTyped(json, false);
}

export function BackupStreamedProgressFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackupStreamedProgress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'status': !exists(json, 'status') ? undefined : ModelDownloadProgressStatusEnumFromJSON(json['status']),
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
        'backup': !exists(json, 'backup') ? undefined : BackupFromJSON(json['backup']),
    };
}

export function BackupStreamedProgressToJSON(value?: BackupStreamedProgress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'status': ModelDownloadProgressStatusEnumToJSON(value.status),
        'percentage': value.percentage,
        'backup': BackupToJSON(value.backup),
    };
}

