/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { ReferencedTag } from './ReferencedTag';
import {
    ReferencedTagFromJSON,
    ReferencedTagFromJSONTyped,
    ReferencedTagToJSON,
} from './ReferencedTag';
import type { Score } from './Score';
import {
    ScoreFromJSON,
    ScoreFromJSONTyped,
    ScoreToJSON,
} from './Score';

/**
 * This is multiple ReferencedTags(which includes an optional FlattenedTag Model within the reference model).
 * @export
 * @interface FlattenedTags
 */
export interface FlattenedTags {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedTags
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {Array<ReferencedTag>}
     * @memberof FlattenedTags
     */
    iterable: Array<ReferencedTag>;
    /**
     * This is a Map<String, int> where the the key is an tag id.
     * @type {{ [key: string]: number; }}
     * @memberof FlattenedTags
     */
    indices?: { [key: string]: number; };
    /**
     *
     * @type {Score}
     * @memberof FlattenedTags
     */
    score?: Score;
}

/**
 * Check if a given object implements the FlattenedTags interface.
 */
export function instanceOfFlattenedTags(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "iterable" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:17 AM
 *
 * @export
 * @param {*} json
 * @returns {FlattenedTags}
 */
export function FlattenedTagsFromJSON(json: any): FlattenedTags {
    return FlattenedTagsFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:17 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {FlattenedTags}
 */
export function FlattenedTagsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedTags {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'iterable': ((json['iterable'] as Array<any>).map(ReferencedTagFromJSON)),
        'indices': !exists(json, 'indices') ? undefined : json['indices'],
        'score': !exists(json, 'score') ? undefined : ScoreFromJSON(json['score']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:17 AM
 *
 * @export
 * @param {?(FlattenedTags | null)} [value]
 * @returns {*}
 */
export function FlattenedTagsToJSON(value?: FlattenedTags | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'iterable': ((value.iterable as Array<any>).map(ReferencedTagToJSON)),
        'indices': value.indices,
        'score': ScoreToJSON(value.score),
    };
}

