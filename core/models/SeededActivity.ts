/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Application } from './Application';
import {
    ApplicationFromJSON,
    ApplicationFromJSONTyped,
    ApplicationToJSON,
} from './Application';
import type { MechanismEnum } from './MechanismEnum';
import {
    MechanismEnumFromJSON,
    MechanismEnumFromJSONTyped,
    MechanismEnumToJSON,
} from './MechanismEnum';
import type { ReferencedAsset } from './ReferencedAsset';
import {
    ReferencedAssetFromJSON,
    ReferencedAssetFromJSONTyped,
    ReferencedAssetToJSON,
} from './ReferencedAsset';
import type { ReferencedConversation } from './ReferencedConversation';
import {
    ReferencedConversationFromJSON,
    ReferencedConversationFromJSONTyped,
    ReferencedConversationToJSON,
} from './ReferencedConversation';
import type { ReferencedFormat } from './ReferencedFormat';
import {
    ReferencedFormatFromJSON,
    ReferencedFormatFromJSONTyped,
    ReferencedFormatToJSON,
} from './ReferencedFormat';
import type { ReferencedUser } from './ReferencedUser';
import {
    ReferencedUserFromJSON,
    ReferencedUserFromJSONTyped,
    ReferencedUserToJSON,
} from './ReferencedUser';
import type { SeededConnectorTracking } from './SeededConnectorTracking';
import {
    SeededConnectorTrackingFromJSON,
    SeededConnectorTrackingFromJSONTyped,
    SeededConnectorTrackingToJSON,
} from './SeededConnectorTracking';

/**
 * This is the preseed to a full blown Activity.
 * 
 * This is the minimum information needed to create an Activity, used within our [POST] /activities/create
 * 
 * if mechenism is not passed in we will default to AUTOMATIC
 * 
 * NOT required to pass in an asset/user/format.
 * @export
 * @interface SeededActivity
 */
export interface SeededActivity {
    /**
     * 
     * @type {SeededConnectorTracking}
     * @memberof SeededActivity
     */
    event: SeededConnectorTracking;
    /**
     * 
     * @type {Application}
     * @memberof SeededActivity
     */
    application: Application;
    /**
     * 
     * @type {ReferencedAsset}
     * @memberof SeededActivity
     */
    asset?: ReferencedAsset;
    /**
     * 
     * @type {ReferencedUser}
     * @memberof SeededActivity
     */
    user?: ReferencedUser;
    /**
     * 
     * @type {ReferencedFormat}
     * @memberof SeededActivity
     */
    format?: ReferencedFormat;
    /**
     * 
     * @type {MechanismEnum}
     * @memberof SeededActivity
     */
    mechanism?: MechanismEnum;
    /**
     * 
     * @type {ReferencedConversation}
     * @memberof SeededActivity
     */
    conversation?: ReferencedConversation;
}

/**
 * Check if a given object implements the SeededActivity interface.
 */
export function instanceOfSeededActivity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "event" in value;
    isInstance = isInstance && "application" in value;

    return isInstance;
}

export function SeededActivityFromJSON(json: any): SeededActivity {
    return SeededActivityFromJSONTyped(json, false);
}

export function SeededActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeededActivity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event': SeededConnectorTrackingFromJSON(json['event']),
        'application': ApplicationFromJSON(json['application']),
        'asset': !exists(json, 'asset') ? undefined : ReferencedAssetFromJSON(json['asset']),
        'user': !exists(json, 'user') ? undefined : ReferencedUserFromJSON(json['user']),
        'format': !exists(json, 'format') ? undefined : ReferencedFormatFromJSON(json['format']),
        'mechanism': !exists(json, 'mechanism') ? undefined : MechanismEnumFromJSON(json['mechanism']),
        'conversation': !exists(json, 'conversation') ? undefined : ReferencedConversationFromJSON(json['conversation']),
    };
}

export function SeededActivityToJSON(value?: SeededActivity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event': SeededConnectorTrackingToJSON(value.event),
        'application': ApplicationToJSON(value.application),
        'asset': ReferencedAssetToJSON(value.asset),
        'user': ReferencedUserToJSON(value.user),
        'format': ReferencedFormatToJSON(value.format),
        'mechanism': MechanismEnumToJSON(value.mechanism),
        'conversation': ReferencedConversationToJSON(value.conversation),
    };
}

