/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { QGPTConversationPipelineForContextualizedCodeDialog } from './QGPTConversationPipelineForContextualizedCodeDialog';
import {
    QGPTConversationPipelineForContextualizedCodeDialogFromJSON,
    QGPTConversationPipelineForContextualizedCodeDialogFromJSONTyped,
    QGPTConversationPipelineForContextualizedCodeDialogToJSON,
} from './QGPTConversationPipelineForContextualizedCodeDialog';
import type { QGPTConversationPipelineForContextualizedCodeGeneration } from './QGPTConversationPipelineForContextualizedCodeGeneration';
import {
    QGPTConversationPipelineForContextualizedCodeGenerationFromJSON,
    QGPTConversationPipelineForContextualizedCodeGenerationFromJSONTyped,
    QGPTConversationPipelineForContextualizedCodeGenerationToJSON,
} from './QGPTConversationPipelineForContextualizedCodeGeneration';
import type { QGPTConversationPipelineForContextualizedCodeWorkstreamDialog } from './QGPTConversationPipelineForContextualizedCodeWorkstreamDialog';
import {
    QGPTConversationPipelineForContextualizedCodeWorkstreamDialogFromJSON,
    QGPTConversationPipelineForContextualizedCodeWorkstreamDialogFromJSONTyped,
    QGPTConversationPipelineForContextualizedCodeWorkstreamDialogToJSON,
} from './QGPTConversationPipelineForContextualizedCodeWorkstreamDialog';
import type { QGPTConversationPipelineForGeneralizedCodeDialog } from './QGPTConversationPipelineForGeneralizedCodeDialog';
import {
    QGPTConversationPipelineForGeneralizedCodeDialogFromJSON,
    QGPTConversationPipelineForGeneralizedCodeDialogFromJSONTyped,
    QGPTConversationPipelineForGeneralizedCodeDialogToJSON,
} from './QGPTConversationPipelineForGeneralizedCodeDialog';

/**
 * This model is specifically for QGPT Conversation pipelines, the model is used to group conversational prompts for instance a conversation around generating code.
 * 
 * here are some use cases-
 * 1. contextualized_code_generation- This is for users that want to have conversations around generating code, when there is provided context.
 * 2. generalized_code- This is for users that want to have conversations without context around code.
 * 3. contextualized_code- This is for users that want to have conversation around code with Context.
 * 4. contextualized_code_workstream: this is for the users that want to use context as well as WPE information in their chat (we wiil prioritize WPE infomration, but also support other info as well)
 * @export
 * @interface QGPTConversationPipeline
 */
export interface QGPTConversationPipeline {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof QGPTConversationPipeline
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {QGPTConversationPipelineForContextualizedCodeGeneration}
     * @memberof QGPTConversationPipeline
     */
    contextualizedCodeGeneration?: QGPTConversationPipelineForContextualizedCodeGeneration;
    /**
     * 
     * @type {QGPTConversationPipelineForGeneralizedCodeDialog}
     * @memberof QGPTConversationPipeline
     */
    generalizedCodeDialog?: QGPTConversationPipelineForGeneralizedCodeDialog;
    /**
     * 
     * @type {QGPTConversationPipelineForContextualizedCodeDialog}
     * @memberof QGPTConversationPipeline
     */
    contextualizedCodeDialog?: QGPTConversationPipelineForContextualizedCodeDialog;
    /**
     * 
     * @type {QGPTConversationPipelineForContextualizedCodeWorkstreamDialog}
     * @memberof QGPTConversationPipeline
     */
    contextualizedCodeWorkstreamDialog?: QGPTConversationPipelineForContextualizedCodeWorkstreamDialog;
}

/**
 * Check if a given object implements the QGPTConversationPipeline interface.
 */
export function instanceOfQGPTConversationPipeline(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QGPTConversationPipelineFromJSON(json: any): QGPTConversationPipeline {
    return QGPTConversationPipelineFromJSONTyped(json, false);
}

export function QGPTConversationPipelineFromJSONTyped(json: any, ignoreDiscriminator: boolean): QGPTConversationPipeline {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'contextualizedCodeGeneration': !exists(json, 'contextualized_code_generation') ? undefined : QGPTConversationPipelineForContextualizedCodeGenerationFromJSON(json['contextualized_code_generation']),
        'generalizedCodeDialog': !exists(json, 'generalized_code_dialog') ? undefined : QGPTConversationPipelineForGeneralizedCodeDialogFromJSON(json['generalized_code_dialog']),
        'contextualizedCodeDialog': !exists(json, 'contextualized_code_dialog') ? undefined : QGPTConversationPipelineForContextualizedCodeDialogFromJSON(json['contextualized_code_dialog']),
        'contextualizedCodeWorkstreamDialog': !exists(json, 'contextualized_code_workstream_dialog') ? undefined : QGPTConversationPipelineForContextualizedCodeWorkstreamDialogFromJSON(json['contextualized_code_workstream_dialog']),
    };
}

export function QGPTConversationPipelineToJSON(value?: QGPTConversationPipeline | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'contextualized_code_generation': QGPTConversationPipelineForContextualizedCodeGenerationToJSON(value.contextualizedCodeGeneration),
        'generalized_code_dialog': QGPTConversationPipelineForGeneralizedCodeDialogToJSON(value.generalizedCodeDialog),
        'contextualized_code_dialog': QGPTConversationPipelineForContextualizedCodeDialogToJSON(value.contextualizedCodeDialog),
        'contextualized_code_workstream_dialog': QGPTConversationPipelineForContextualizedCodeWorkstreamDialogToJSON(value.contextualizedCodeWorkstreamDialog),
    };
}

