/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchemaSemanticVersionEnum } from './EmbeddedModelSchemaSemanticVersionEnum';
import {
    EmbeddedModelSchemaSemanticVersionEnumFromJSON,
    EmbeddedModelSchemaSemanticVersionEnumFromJSONTyped,
    EmbeddedModelSchemaSemanticVersionEnumToJSON,
} from './EmbeddedModelSchemaSemanticVersionEnum';

/**
 * This is a model that will keep track of all of our version related to our models. ie (1) the database migration and (2) the global semantic version of the api.
 * @export
 * @interface EmbeddedModelSchema
 */
export interface EmbeddedModelSchema {
    /**
     * this is the current database version that this model was used for.
     * @type {number}
     * @memberof EmbeddedModelSchema
     */
    migration: number;
    /**
     *
     * @type {EmbeddedModelSchemaSemanticVersionEnum}
     * @memberof EmbeddedModelSchema
     */
    semantic: EmbeddedModelSchemaSemanticVersionEnum;
}

/**
 * Check if a given object implements the EmbeddedModelSchema interface.
 */
export function instanceOfEmbeddedModelSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "migration" in value;
    isInstance = isInstance && "semantic" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:14 AM
 *
 * @export
 * @param {*} json
 * @returns {EmbeddedModelSchema}
 */
export function EmbeddedModelSchemaFromJSON(json: any): EmbeddedModelSchema {
    return EmbeddedModelSchemaFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:14 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {EmbeddedModelSchema}
 */
export function EmbeddedModelSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddedModelSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'migration': json['migration'],
        'semantic': EmbeddedModelSchemaSemanticVersionEnumFromJSON(json['semantic']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:14 AM
 *
 * @export
 * @param {?(EmbeddedModelSchema | null)} [value]
 * @returns {*}
 */
export function EmbeddedModelSchemaToJSON(value?: EmbeddedModelSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'migration': value.migration,
        'semantic': EmbeddedModelSchemaSemanticVersionEnumToJSON(value.semantic),
    };
}

