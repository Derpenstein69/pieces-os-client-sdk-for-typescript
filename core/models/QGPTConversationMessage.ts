/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { GroupedTimestamp } from './GroupedTimestamp';
import {
    GroupedTimestampFromJSON,
    GroupedTimestampFromJSONTyped,
    GroupedTimestampToJSON,
} from './GroupedTimestamp';
import type { QGPTConversationMessageRoleEnum } from './QGPTConversationMessageRoleEnum';
import {
    QGPTConversationMessageRoleEnumFromJSON,
    QGPTConversationMessageRoleEnumFromJSONTyped,
    QGPTConversationMessageRoleEnumToJSON,
} from './QGPTConversationMessageRoleEnum';

/**
 * This will take a single message, and a role.
 * @export
 * @interface QGPTConversationMessage
 */
export interface QGPTConversationMessage {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof QGPTConversationMessage
     */
    schema?: EmbeddedModelSchema;
    /**
     *
     * @type {string}
     * @memberof QGPTConversationMessage
     */
    text: string;
    /**
     *
     * @type {QGPTConversationMessageRoleEnum}
     * @memberof QGPTConversationMessage
     */
    role: QGPTConversationMessageRoleEnum;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof QGPTConversationMessage
     */
    timestamp: GroupedTimestamp;
}

/**
 * Check if a given object implements the QGPTConversationMessage interface.
 */
export function instanceOfQGPTConversationMessage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "text" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "timestamp" in value;

    return isInstance;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:31 AM
 *
 * @export
 * @param {*} json
 * @returns {QGPTConversationMessage}
 */
export function QGPTConversationMessageFromJSON(json: any): QGPTConversationMessage {
    return QGPTConversationMessageFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:31 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {QGPTConversationMessage}
 */
export function QGPTConversationMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): QGPTConversationMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'text': json['text'],
        'role': QGPTConversationMessageRoleEnumFromJSON(json['role']),
        'timestamp': GroupedTimestampFromJSON(json['timestamp']),
    };
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:31 AM
 *
 * @export
 * @param {?(QGPTConversationMessage | null)} [value]
 * @returns {*}
 */
export function QGPTConversationMessageToJSON(value?: QGPTConversationMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'text': value.text,
        'role': QGPTConversationMessageRoleEnumToJSON(value.role),
        'timestamp': GroupedTimestampToJSON(value.timestamp),
    };
}

