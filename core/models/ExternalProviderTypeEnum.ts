/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * This is an enum to describe the provider used to authenticate a user.
 *
 * IMPORTANT NOT to modify tha values here unless they are explicitly mapped with auth0's provider values(example within cloud server)
 *
 * 'waad': (windows azure active directory)
 * @export
 */
export const ExternalProviderTypeEnum = {
    Github: 'github',
    Auth0: 'auth0',
    GoogleOauth2: 'google-oauth2',
    Bitbucket: 'bitbucket',
    Linkedin: 'linkedin',
    Twitter: 'twitter',
    Facebook: 'facebook',
    Waad: 'waad'
} as const;
/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:15 AM
 *
 * @export
 * @typedef {ExternalProviderTypeEnum}
 */
export type ExternalProviderTypeEnum = typeof ExternalProviderTypeEnum[keyof typeof ExternalProviderTypeEnum];


/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:15 AM
 *
 * @export
 * @param {*} json
 * @returns {ExternalProviderTypeEnum}
 */
export function ExternalProviderTypeEnumFromJSON(json: any): ExternalProviderTypeEnum {
    return ExternalProviderTypeEnumFromJSONTyped(json, false);
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:15 AM
 *
 * @export
 * @param {*} json
 * @param {boolean} ignoreDiscriminator
 * @returns {ExternalProviderTypeEnum}
 */
export function ExternalProviderTypeEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalProviderTypeEnum {
    return json as ExternalProviderTypeEnum;
}

/**
 * ${1:Description placeholder}
 * @date 4/12/2024 - 4:03:15 AM
 *
 * @export
 * @param {?(ExternalProviderTypeEnum | null)} [value]
 * @returns {*}
 */
export function ExternalProviderTypeEnumToJSON(value?: ExternalProviderTypeEnum | null): any {
    return value as any;
}

